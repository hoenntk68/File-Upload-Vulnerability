package com.labia.fileUpload.service;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.file.Path;
import java.nio.file.Paths;
import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;

@Service
public class FileUploadService {

    public static final String uploadDirectory = "/home/huyen/FPT/LAB_IA/Module2_Web_Security/FileUpLoadVulnerability/";

    public void uploadFile(MultipartFile file) throws IOException {
//        file.transferTo(new File("/home/huyen/FPT/LAB_IA/Module2_Web_Security/FileUpLoadVulnerability/" + file.getOriginalFilename()));
        file.transferTo(new File(uploadDirectory + file.getOriginalFilename()));
    }

    public Resource loadFile(String filename) throws IOException {
        try {
            Path filePath = Paths.get(uploadDirectory).resolve(filename);
            Resource resource = new UrlResource(filePath.toUri());

            if (resource.exists() && resource.isReadable()) {
                return resource;
            } else {
                throw new IOException("File not found or not readable: " + filename);
            }
        } catch (MalformedURLException e) {
            throw new IOException("Invalid file path: " + filename, e);
        }
    }
}
